spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  jwt:
    secret-key: "afdsjfkpoqjfelkjlknsadafdshsalfkjadfsjadfsjfadlkjfdsalkjsaflklsjklfk"
    expiration-time: 86400000 # 1일


  security:
    cors:
      allowed-origins: "http://54.180.205.177:8080"
      allowed-methods: "*"
      allowed-headers: "*"
      allow-credentials: true

    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID} # 환경 변수로 클라이언트 ID 설정
            client-secret: ${NAVER_CLIENT_SECRET} # 환경 변수로 클라이언트 Secret 설정
            redirect-uri: http://54.180.205.177:8080/oauth2/authorization/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - phone_number # 핸드폰 번호 추가
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID} # 환경 변수로 클라이언트 ID 설정
            client-secret: ${GOOGLE_CLIENT_SECRET} # 환경 변수로 클라이언트 Secret 설정
            redirect-uri: http://54.180.205.177:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile


        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
