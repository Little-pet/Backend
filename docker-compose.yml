version: "3.8"

services:
  spring-boot-app:  # ✅ Spring Boot 컨테이너 (백엔드)
    image: seojaejun/littlepetdocker:latest
    container_name: littlepet-container
    restart: always
    ports:
      - "8080:8080"
    networks:
      - my-network
    env_file:
      - .env  # ✅ DB 및 API 키 로드
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - TZ=Asia/Seoul


  nginx:  # ✅ Nginx Reverse Proxy 컨테이너
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      spring-boot-app:
        condition: service_healthy  # ✅ Spring Boot 실행 후 Nginx 실행
    networks:
      - my-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro  # ✅ SSL 인증서 마운트

networks:
  my-network:
    driver: bridge